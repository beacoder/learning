learning Rails

##----------------------------------------------------------------------------
## Rails helper commands
##----------------------------------------------------------------------------

bundle install --path vendor/cache
# install gems in Gemfile with bundle

rails routes
# show mappings between routes and controller actions

rails console
# lets you interact with Rails application from command line

rails db:migrate
# apply changes to database table

rails db:rollback [VERSION=20100421175455]
# roll back previous or specific migration

rake db:migrate:redo VERSION=20100421175455
# redo migration for schema ID 20100421175455

rails db:migrate:status
# check migrations status

sqlite3 -line db/development.sqlite3
# enter SQL mode

.quit
# quit SQL mode

##----------------------------------------------------------------------------
## Rails core commands
##----------------------------------------------------------------------------

rails new depot
# create a new rails project named depot

rails generate scaffold Product title:string description:text image_url:string price:decimal && rails db:migrate
# create model, view, controller and database table for Product

rails server
# starts a web server on our http://localhost:3000/

rails test
# run model and controller tests which rails generates along with the scaffolding

rails db:seed
# populate products table with test data from db/seeds.rb

rails generate controller Store index
# create view, controller for Store which has a single action method, index()

rails dev:cache
# toggle caching on and off in the development environment

rails generate scaffold Cart && rails db:migrate
# create model, view, controller and database table for Cart

rails generate scaffold LineItem product:references cart:belongs_to && rails db:migrate
# create model, view, controller and database table for LineItem which references product and cart

rails generate migration add_quantity_to_line_items quantity:integer && rails db:migrate
# add column quantity to schema of table line_items and apply changes

rails generate migration combine_items_in_cart && rails db:migrate
# replace multiple items for a single product in a cart with a single item

rails generate channel products
# create channel for Product, use WebSockets to implement real-time features

rails generate scaffold Order name address:text email pay_type:integer
# create model, view, controller and database table for Order

rails generate migration add_order_to_line_item order:references && rails db:migrate
# add column order to schema of table line_items and apply changes

rails generate mailer Order received shipped
# create mailer for Order with two templates
